/* eslint-disable */
// @generated by protobuf-ts 2.9.3 with parameter long_type_number,eslint_disable,add_pb_suffix,ts_nocheck,server_generic
// @generated from protobuf file "prehog/v1alpha/teleport.proto" (package "prehog.v1alpha", syntax proto3)
// tslint:disable
// @ts-nocheck
//
//
// Teleport
// Copyright (C) 2023  Gravitational, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
import { HelloTeleportResponse } from "./teleport_pb";
import { HelloTeleportRequest } from "./teleport_pb";
import { SubmitEventsResponse } from "./teleport_pb";
import { SubmitEventsRequest } from "./teleport_pb";
import { SubmitEventResponse } from "./teleport_pb";
import { SubmitEventRequest } from "./teleport_pb";
import { ServerCallContext } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service prehog.v1alpha.TeleportReportingService
 */
export interface ITeleportReportingService<T = ServerCallContext> {
    /**
     * equivalent to SubmitEvents with a single event, should be unused by now
     *
     * @deprecated
     * @generated from protobuf rpc: SubmitEvent(prehog.v1alpha.SubmitEventRequest) returns (prehog.v1alpha.SubmitEventResponse);
     */
    submitEvent(request: SubmitEventRequest, context: T): Promise<SubmitEventResponse>;
    /**
     * encodes and forwards usage events to the PostHog event database; each
     * event is annotated with some properties that depend on the identity of the
     * caller:
     * - tp.account_id (UUID in string form, can be empty if missing from the
     *   license)
     * - tp.license_name (should always be a UUID)
     * - tp.license_authority (name of the authority that signed the license file
     *   used for authentication)
     * - tp.is_cloud (boolean)
     *
     * @generated from protobuf rpc: SubmitEvents(prehog.v1alpha.SubmitEventsRequest) returns (prehog.v1alpha.SubmitEventsResponse);
     */
    submitEvents(request: SubmitEventsRequest, context: T): Promise<SubmitEventsResponse>;
    /**
     * @generated from protobuf rpc: HelloTeleport(prehog.v1alpha.HelloTeleportRequest) returns (prehog.v1alpha.HelloTeleportResponse);
     */
    helloTeleport(request: HelloTeleportRequest, context: T): Promise<HelloTeleportResponse>;
}
