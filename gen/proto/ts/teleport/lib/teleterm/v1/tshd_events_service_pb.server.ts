/* eslint-disable */
// @generated by protobuf-ts 2.9.3 with parameter long_type_number,eslint_disable,add_pb_suffix,ts_nocheck,server_generic
// @generated from protobuf file "teleport/lib/teleterm/v1/tshd_events_service.proto" (package "teleport.lib.teleterm.v1", syntax proto3)
// tslint:disable
// @ts-nocheck
//
//
// Teleport
// Copyright (C) 2023  Gravitational, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
import { PromptMFAResponse } from "./tshd_events_service_pb";
import { PromptMFARequest } from "./tshd_events_service_pb";
import { SendPendingHeadlessAuthenticationResponse } from "./tshd_events_service_pb";
import { SendPendingHeadlessAuthenticationRequest } from "./tshd_events_service_pb";
import { SendNotificationResponse } from "./tshd_events_service_pb";
import { SendNotificationRequest } from "./tshd_events_service_pb";
import { ReloginResponse } from "./tshd_events_service_pb";
import { ReloginRequest } from "./tshd_events_service_pb";
import { ServerCallContext } from "@protobuf-ts/runtime-rpc";
/**
 * TshdEventsService is served by the Electron app. The tsh daemon calls this service to notify the
 * app about actions that happen outside of the app itself.
 *
 * @generated from protobuf service teleport.lib.teleterm.v1.TshdEventsService
 */
export interface ITshdEventsService<T = ServerCallContext> {
    /**
     * Relogin makes the Electron app display a login modal for the specific root cluster. The request
     * returns a response after the relogin procedure has been successfully finished.
     *
     * @generated from protobuf rpc: Relogin(teleport.lib.teleterm.v1.ReloginRequest) returns (teleport.lib.teleterm.v1.ReloginResponse);
     */
    relogin(request: ReloginRequest, context: T): Promise<ReloginResponse>;
    /**
     * SendNotification causes the Electron app to display a notification in the UI. The request
     * accepts a specific message rather than a generic string so that the Electron is in control as
     * to what message is displayed and how exactly it looks.
     *
     * @generated from protobuf rpc: SendNotification(teleport.lib.teleterm.v1.SendNotificationRequest) returns (teleport.lib.teleterm.v1.SendNotificationResponse);
     */
    sendNotification(request: SendNotificationRequest, context: T): Promise<SendNotificationResponse>;
    /**
     * SendPendingHeadlessAuthentication notifies the Electron app of a pending headless authentication,
     * which it can use to initiate headless authentication resolution in the UI.
     *
     * @generated from protobuf rpc: SendPendingHeadlessAuthentication(teleport.lib.teleterm.v1.SendPendingHeadlessAuthenticationRequest) returns (teleport.lib.teleterm.v1.SendPendingHeadlessAuthenticationResponse);
     */
    sendPendingHeadlessAuthentication(request: SendPendingHeadlessAuthenticationRequest, context: T): Promise<SendPendingHeadlessAuthenticationResponse>;
    /**
     * PromptMFA notifies the Electron app that the daemon is waiting for the user to answer an MFA prompt.
     *
     * @generated from protobuf rpc: PromptMFA(teleport.lib.teleterm.v1.PromptMFARequest) returns (teleport.lib.teleterm.v1.PromptMFAResponse);
     */
    promptMFA(request: PromptMFARequest, context: T): Promise<PromptMFAResponse>;
}
