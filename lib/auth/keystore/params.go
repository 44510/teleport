package keystore

import "github.com/gravitational/teleport/api/types"

type pkcs11Params struct {
	// ModulePath is the path to the PKCS#11 library.
	ModulePath string `yaml:"module_path"`
	// TokenLabel is the CKA_LABEL of the HSM token to use. Set this or
	// SlotNumber to select a token.
	TokenLabel string `yaml:"token_label,omitempty"`
	// SlotNumber is the slot number of the HSM token to use. Set this or
	// TokenLabel to select a token.
	SlotNumber *int `yaml:"slot_number,omitempty"`
	// Pin is the raw pin for connecting to the HSM. Set this or PinPath to set
	// the pin.
	Pin string `yaml:"pin,omitempty"`
	// PinPath is a path to a file containing a pin for connecting to the HSM.
	// Trailing newlines will be removed, other whitespace will be left. Set
	// this or Pin to set the pin.
	PinPath string `yaml:"pin_path,omitempty"`
}

type gcpKMSParams struct {
	// KeyRing is the GCP key ring where all keys generated by this auth server
	// should be held. This must be the fully qualified resource name of the key
	// ring, including the project and location, e.g.
	// projects/teleport-project/locations/us-west1/keyRings/teleport-keyring
	KeyRing string `yaml:"keyring"`
	// ProtectionLevel specifies how cryptographic operations are performed.
	// For more information, see https://cloud.google.com/kms/docs/algorithms#protection_levels
	// Supported options are "HSM" and "SOFTWARE".
	ProtectionLevel string `yaml:"protection_level"`
}

// SupportedSoftwareSSHAlgorithms defines the private key and signature
// algorithms supported for SSH keys/certs.
var SupportedSoftwareSSHAlgorithms = []types.KeyAlgorithm{
	// golang.org/x/crypto/ssh always uses SHA512 hash with RSA public keys
	// https://github.com/golang/crypto/blob/0ff60057bbafb685e9f9a97af5261f484f8283d1/ssh/certs.go#L443-L445
	//RSA2048WithSHA512,
	//RSA3072WithSHA512,
	//RSA4096WithSHA512,
	//Ed25519,
}

// SupportedSoftwareTLSAlgorithms defines the private key and signature
// algorithms supported for TLS/x509 keys/certs.
var SupportedSoftwareTLSAlgorithms = []types.KeyAlgorithm{
	// crypto/x509 always uses SHA256 hash with RSA public keys
	// https://github.com/golang/go/blob/dbf9bf2c39116f1330002ebba8f8870b96645d87/src/crypto/x509/x509.go#L1411-L1414
	//RSA2048WithSHA256,
	//RSA3072WithSHA256,
	//RSA4096WithSHA256,
	//Ed25519,
}

// SupportedSoftwareJWTAlgorithms defines the private key and signature
// algorithms supported for JWT keys/signatures.
var SupportedSoftwareJWTAlgorithms = []types.KeyAlgorithm{
	// Currently all are supported
	// https://github.com/go-jose/go-jose/blob/6531eff483988d182103292d4348e075a6090c9e/shared.go#L98-L113
	//RSA2048WithSHA256,
	//RSA2048WithSHA512,
	//RSA3072WithSHA256,
	//RSA3072WithSHA512,
	//RSA4096WithSHA256,
	//RSA4096WithSHA512,
	//Ed25519,
}
