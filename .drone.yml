---
################################################
# Generated using dronegen, do not edit by hand!
# Use 'make dronegen' to update.
# Generated at dronegen/tag.go:233
################################################

kind: pipeline
type: kubernetes
name: build-linux-amd64-centos7
environment:
  RUNTIME: go1.17.3
trigger:
  event:
    include:
    - tag
  ref:
    include:
    - refs/tags/v*
  repo:
    include:
    - gravitational/*
workspace:
  path: /go
clone:
  disable: true
steps:
- name: Check out code
  image: docker:git
  commands:
  - mkdir -p /go/src/github.com/gravitational/teleport
  - cd /go/src/github.com/gravitational/teleport
  - git clone https://github.com/gravitational/${DRONE_REPO_NAME}.git .
  - git checkout ${DRONE_TAG:-$DRONE_COMMIT}
  - mkdir -m 0700 /root/.ssh && echo -n "$GITHUB_PRIVATE_KEY" > /root/.ssh/id_rsa
    && chmod 600 /root/.ssh/id_rsa
  - ssh-keyscan -H github.com > /root/.ssh/known_hosts 2>/dev/null && chmod 600 /root/.ssh/known_hosts
  - git submodule update --init e
  - git submodule update --init --recursive webassets || true
  - rm -f /root/.ssh/id_rsa
  - mkdir -p /go/cache /go/artifacts
  - if [[ "${DRONE_TAG}" != "" ]]; then echo "${DRONE_TAG##v}" > /go/.version.txt;
    else egrep ^VERSION Makefile | cut -d= -f2 > /go/.version.txt; fi; cat /go/.version.txt
  environment:
    GITHUB_PRIVATE_KEY:
      from_secret: GITHUB_PRIVATE_KEY
- name: Wait for docker
  image: docker
  commands:
  - timeout 30s /bin/sh -c 'while [ ! -S /var/run/docker.sock ]; do sleep 1; done'
  volumes:
  - name: dockersock
    path: /var/run
- name: Build artifacts
  image: docker
  commands:
  - apk add --no-cache make
  - chown -R $UID:$GID /go
  - cd /go/src/github.com/gravitational/teleport
  - make -C build.assets release-amd64-centos7
  environment:
    ARCH: amd64
    GID: "1000"
    GOCACHE: /go/cache
    GOPATH: /go
    OS: linux
    UID: "1000"
  volumes:
  - name: dockersock
    path: /var/run
- name: Copy artifacts
  image: docker
  commands:
  - cd /go/src/github.com/gravitational/teleport
  - find . -maxdepth 1 -iname "teleport*.tar.gz" -print -exec cp {} /go/artifacts
    \;
  - find e/ -maxdepth 1 -iname "teleport*.tar.gz" -print -exec cp {} /go/artifacts
    \;
  - export VERSION=$(cat /go/.version.txt)
  - mv /go/artifacts/teleport-v$${VERSION}-linux-amd64-bin.tar.gz /go/artifacts/teleport-v$${VERSION}-linux-amd64-centos7-bin.tar.gz
  - mv /go/artifacts/teleport-ent-v$${VERSION}-linux-amd64-bin.tar.gz /go/artifacts/teleport-ent-v$${VERSION}-linux-amd64-centos7-bin.tar.gz
  - cd /go/artifacts && for FILE in teleport*.tar.gz; do sha256sum $FILE > $FILE.sha256;
    done && ls -l
- name: Upload to S3
  image: plugins/s3
  settings:
    access_key:
      from_secret: AWS_ACCESS_KEY_ID
    bucket:
      from_secret: AWS_S3_BUCKET
    region: us-west-2
    secret_key:
      from_secret: AWS_SECRET_ACCESS_KEY
    source: /go/artifacts/*
    strip_prefix: /go/artifacts/
    target: teleport/tag/${DRONE_TAG##v}
services:
- name: Start Docker
  image: docker:dind
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run
volumes:
- name: dockersock
  temp: {}

---
################################################
# Generated using dronegen, do not edit by hand!
# Use 'make dronegen' to update.
# Generated at dronegen/tag.go:233
################################################

kind: pipeline
type: kubernetes
name: build-linux-amd64-centos7-fips
environment:
  RUNTIME: go1.17.3
trigger:
  event:
    include:
    - tag
  ref:
    include:
    - refs/tags/v*
  repo:
    include:
    - gravitational/*
workspace:
  path: /go
clone:
  disable: true
steps:
- name: Check out code
  image: docker:git
  commands:
  - mkdir -p /go/src/github.com/gravitational/teleport
  - cd /go/src/github.com/gravitational/teleport
  - git clone https://github.com/gravitational/${DRONE_REPO_NAME}.git .
  - git checkout ${DRONE_TAG:-$DRONE_COMMIT}
  - mkdir -m 0700 /root/.ssh && echo -n "$GITHUB_PRIVATE_KEY" > /root/.ssh/id_rsa
    && chmod 600 /root/.ssh/id_rsa
  - ssh-keyscan -H github.com > /root/.ssh/known_hosts 2>/dev/null && chmod 600 /root/.ssh/known_hosts
  - git submodule update --init e
  - git submodule update --init --recursive webassets || true
  - rm -f /root/.ssh/id_rsa
  - mkdir -p /go/cache /go/artifacts
  - if [[ "${DRONE_TAG}" != "" ]]; then echo "${DRONE_TAG##v}" > /go/.version.txt;
    else egrep ^VERSION Makefile | cut -d= -f2 > /go/.version.txt; fi; cat /go/.version.txt
  environment:
    GITHUB_PRIVATE_KEY:
      from_secret: GITHUB_PRIVATE_KEY
- name: Wait for docker
  image: docker
  commands:
  - timeout 30s /bin/sh -c 'while [ ! -S /var/run/docker.sock ]; do sleep 1; done'
  volumes:
  - name: dockersock
    path: /var/run
- name: Build artifacts
  image: docker
  commands:
  - apk add --no-cache make
  - chown -R $UID:$GID /go
  - cd /go/src/github.com/gravitational/teleport
  - export VERSION=$(cat /go/.version.txt)
  - make -C build.assets release-amd64-centos7-fips
  environment:
    ARCH: amd64
    FIPS: "yes"
    GID: "1000"
    GOCACHE: /go/cache
    GOPATH: /go
    OS: linux
    UID: "1000"
  volumes:
  - name: dockersock
    path: /var/run
- name: Copy artifacts
  image: docker
  commands:
  - cd /go/src/github.com/gravitational/teleport
  - find e/ -maxdepth 1 -iname "teleport*.tar.gz" -print -exec cp {} /go/artifacts
    \;
  - export VERSION=$(cat /go/.version.txt)
  - mv /go/artifacts/teleport-ent-v$${VERSION}-linux-amd64-fips-bin.tar.gz /go/artifacts/teleport-ent-v$${VERSION}-linux-amd64-centos7-fips-bin.tar.gz
  - cd /go/artifacts && for FILE in teleport*.tar.gz; do sha256sum $FILE > $FILE.sha256;
    done && ls -l
- name: Upload to S3
  image: plugins/s3
  settings:
    access_key:
      from_secret: AWS_ACCESS_KEY_ID
    bucket:
      from_secret: AWS_S3_BUCKET
    region: us-west-2
    secret_key:
      from_secret: AWS_SECRET_ACCESS_KEY
    source: /go/artifacts/*
    strip_prefix: /go/artifacts/
    target: teleport/tag/${DRONE_TAG##v}
services:
- name: Start Docker
  image: docker:dind
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run
volumes:
- name: dockersock
  temp: {}

---
################################################
# Generated using dronegen, do not edit by hand!
# Use 'make dronegen' to update.
# Generated at dronegen/tag.go:233
################################################

kind: pipeline
type: kubernetes
name: build-linux-amd64
environment:
  RUNTIME: go1.17.3
trigger:
  event:
    include:
    - tag
  ref:
    include:
    - refs/tags/v*
  repo:
    include:
    - gravitational/*
workspace:
  path: /go
clone:
  disable: true
steps:
- name: Check out code
  image: docker:git
  commands:
  - mkdir -p /go/src/github.com/gravitational/teleport
  - cd /go/src/github.com/gravitational/teleport
  - git clone https://github.com/gravitational/${DRONE_REPO_NAME}.git .
  - git checkout ${DRONE_TAG:-$DRONE_COMMIT}
  - mkdir -m 0700 /root/.ssh && echo -n "$GITHUB_PRIVATE_KEY" > /root/.ssh/id_rsa
    && chmod 600 /root/.ssh/id_rsa
  - ssh-keyscan -H github.com > /root/.ssh/known_hosts 2>/dev/null && chmod 600 /root/.ssh/known_hosts
  - git submodule update --init e
  - git submodule update --init --recursive webassets || true
  - rm -f /root/.ssh/id_rsa
  - mkdir -p /go/cache /go/artifacts
  - if [[ "${DRONE_TAG}" != "" ]]; then echo "${DRONE_TAG##v}" > /go/.version.txt;
    else egrep ^VERSION Makefile | cut -d= -f2 > /go/.version.txt; fi; cat /go/.version.txt
  environment:
    GITHUB_PRIVATE_KEY:
      from_secret: GITHUB_PRIVATE_KEY
- name: Wait for docker
  image: docker
  commands:
  - timeout 30s /bin/sh -c 'while [ ! -S /var/run/docker.sock ]; do sleep 1; done'
  volumes:
  - name: dockersock
    path: /var/run
- name: Build artifacts
  image: docker
  commands:
  - apk add --no-cache make
  - chown -R $UID:$GID /go
  - cd /go/src/github.com/gravitational/teleport
  - make -C build.assets release-amd64
  environment:
    ARCH: amd64
    GID: "1000"
    GOCACHE: /go/cache
    GOPATH: /go
    OS: linux
    UID: "1000"
  volumes:
  - name: dockersock
    path: /var/run
- name: Copy artifacts
  image: docker
  commands:
  - cd /go/src/github.com/gravitational/teleport
  - find . -maxdepth 1 -iname "teleport*.tar.gz" -print -exec cp {} /go/artifacts
    \;
  - find e/ -maxdepth 1 -iname "teleport*.tar.gz" -print -exec cp {} /go/artifacts
    \;
  - cd /go/artifacts && for FILE in teleport*.tar.gz; do sha256sum $FILE > $FILE.sha256;
    done && ls -l
- name: Upload to S3
  image: plugins/s3
  settings:
    access_key:
      from_secret: AWS_ACCESS_KEY_ID
    bucket:
      from_secret: AWS_S3_BUCKET
    region: us-west-2
    secret_key:
      from_secret: AWS_SECRET_ACCESS_KEY
    source: /go/artifacts/*
    strip_prefix: /go/artifacts/
    target: teleport/tag/${DRONE_TAG##v}
services:
- name: Start Docker
  image: docker:dind
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run
volumes:
- name: dockersock
  temp: {}

---
################################################
# Generated using dronegen, do not edit by hand!
# Use 'make dronegen' to update.
# Generated at dronegen/tag.go:233
################################################

kind: pipeline
type: kubernetes
name: build-linux-amd64-fips
environment:
  RUNTIME: go1.17.3
trigger:
  event:
    include:
    - tag
  ref:
    include:
    - refs/tags/v*
  repo:
    include:
    - gravitational/*
workspace:
  path: /go
clone:
  disable: true
steps:
- name: Check out code
  image: docker:git
  commands:
  - mkdir -p /go/src/github.com/gravitational/teleport
  - cd /go/src/github.com/gravitational/teleport
  - git clone https://github.com/gravitational/${DRONE_REPO_NAME}.git .
  - git checkout ${DRONE_TAG:-$DRONE_COMMIT}
  - mkdir -m 0700 /root/.ssh && echo -n "$GITHUB_PRIVATE_KEY" > /root/.ssh/id_rsa
    && chmod 600 /root/.ssh/id_rsa
  - ssh-keyscan -H github.com > /root/.ssh/known_hosts 2>/dev/null && chmod 600 /root/.ssh/known_hosts
  - git submodule update --init e
  - git submodule update --init --recursive webassets || true
  - rm -f /root/.ssh/id_rsa
  - mkdir -p /go/cache /go/artifacts
  - if [[ "${DRONE_TAG}" != "" ]]; then echo "${DRONE_TAG##v}" > /go/.version.txt;
    else egrep ^VERSION Makefile | cut -d= -f2 > /go/.version.txt; fi; cat /go/.version.txt
  environment:
    GITHUB_PRIVATE_KEY:
      from_secret: GITHUB_PRIVATE_KEY
- name: Wait for docker
  image: docker
  commands:
  - timeout 30s /bin/sh -c 'while [ ! -S /var/run/docker.sock ]; do sleep 1; done'
  volumes:
  - name: dockersock
    path: /var/run
- name: Build artifacts
  image: docker
  commands:
  - apk add --no-cache make
  - chown -R $UID:$GID /go
  - cd /go/src/github.com/gravitational/teleport
  - export VERSION=$(cat /go/.version.txt)
  - make -C build.assets release-amd64-fips
  environment:
    ARCH: amd64
    FIPS: "yes"
    GID: "1000"
    GOCACHE: /go/cache
    GOPATH: /go
    OS: linux
    UID: "1000"
  volumes:
  - name: dockersock
    path: /var/run
- name: Copy artifacts
  image: docker
  commands:
  - cd /go/src/github.com/gravitational/teleport
  - find e/ -maxdepth 1 -iname "teleport*.tar.gz" -print -exec cp {} /go/artifacts
    \;
  - cd /go/artifacts && for FILE in teleport*.tar.gz; do sha256sum $FILE > $FILE.sha256;
    done && ls -l
- name: Upload to S3
  image: plugins/s3
  settings:
    access_key:
      from_secret: AWS_ACCESS_KEY_ID
    bucket:
      from_secret: AWS_S3_BUCKET
    region: us-west-2
    secret_key:
      from_secret: AWS_SECRET_ACCESS_KEY
    source: /go/artifacts/*
    strip_prefix: /go/artifacts/
    target: teleport/tag/${DRONE_TAG##v}
services:
- name: Start Docker
  image: docker:dind
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run
volumes:
- name: dockersock
  temp: {}

---
################################################
# Generated using dronegen, do not edit by hand!
# Use 'make dronegen' to update.
# Generated at dronegen/tag.go:375
################################################

kind: pipeline
type: kubernetes
name: build-linux-amd64-rpm
trigger:
  event:
    include:
    - tag
  ref:
    include:
    - refs/tags/v*
  repo:
    include:
    - gravitational/*
workspace:
  path: /go
clone:
  disable: true
depends_on:
- build-linux-amd64
steps:
- name: Check out code
  image: docker:git
  commands:
  - mkdir -p /go/src/github.com/gravitational/teleport
  - cd /go/src/github.com/gravitational/teleport
  - git clone https://github.com/gravitational/${DRONE_REPO_NAME}.git .
  - git checkout ${DRONE_TAG:-$DRONE_COMMIT}
  - mkdir -m 0700 /root/.ssh && echo -n "$GITHUB_PRIVATE_KEY" > /root/.ssh/id_rsa
    && chmod 600 /root/.ssh/id_rsa
  - ssh-keyscan -H github.com > /root/.ssh/known_hosts 2>/dev/null && chmod 600 /root/.ssh/known_hosts
  - git submodule update --init e
  - git submodule update --init --recursive webassets || true
  - rm -f /root/.ssh/id_rsa
  - mkdir -p /go/cache /go/artifacts
  - if [[ "${DRONE_TAG}" != "" ]]; then echo "${DRONE_TAG##v}" > /go/.version.txt;
    else egrep ^VERSION Makefile | cut -d= -f2 > /go/.version.txt; fi; cat /go/.version.txt
  environment:
    GITHUB_PRIVATE_KEY:
      from_secret: GITHUB_PRIVATE_KEY
- name: Wait for docker
  image: docker
  commands:
  - timeout 30s /bin/sh -c 'while [ ! -S /var/run/docker.sock ]; do sleep 1; done'
  volumes:
  - name: dockersock
    path: /var/run
- name: Download artifacts from S3
  image: amazon/aws-cli
  commands:
  - export VERSION=$(cat /go/.version.txt)
  - if [[ "${DRONE_TAG}" != "" ]]; then export S3_PATH="tag/$${DRONE_TAG##v}/"; else
    export S3_PATH="tag/"; fi
  - aws s3 cp s3://$AWS_S3_BUCKET/teleport/$${S3_PATH}teleport-v$${VERSION}-linux-amd64-bin.tar.gz /go/artifacts/
  - aws s3 cp s3://$AWS_S3_BUCKET/teleport/$${S3_PATH}teleport-ent-v$${VERSION}-linux-amd64-bin.tar.gz /go/artifacts/
  - aws s3 cp s3://$AWS_S3_BUCKET/teleport/$${S3_PATH}teleport-v$${VERSION}-linux-amd64-centos7-bin.tar.gz /go/artifacts/
  - aws s3 cp s3://$AWS_S3_BUCKET/teleport/$${S3_PATH}teleport-ent-v$${VERSION}-linux-amd64-centos7-bin.tar.gz /go/artifacts/
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_REGION: us-west-2
    AWS_S3_BUCKET:
      from_secret: AWS_S3_BUCKET
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
- name: Build artifacts
  image: docker
  commands:
  - apk add --no-cache bash curl gzip make tar
  - cd /go/src/github.com/gravitational/teleport
  - export VERSION=$(cat /go/.version.txt)
  - mkdir -m0700 $GNUPG_DIR
  - echo "$GPG_RPM_SIGNING_ARCHIVE" | base64 -d | tar -xzf - -C $GNUPG_DIR
  - chown -R root:root $GNUPG_DIR
  - ls /go/artifacts
  - make rpm
  - make rpm RPM_FLAGS="-c centos7"
  - rm -rf $GNUPG_DIR
  environment:
    ARCH: amd64
    ENT_TARBALL_PATH: /go/artifacts
    GNUPG_DIR: /tmpfs/gnupg
    GPG_RPM_SIGNING_ARCHIVE:
      from_secret: GPG_RPM_SIGNING_ARCHIVE
    OSS_TARBALL_PATH: /go/artifacts
    TMPDIR: /go
  volumes:
  - name: tmpfs
    path: /tmpfs
  - name: dockersock
    path: /var/run
- name: Copy artifacts
  image: docker
  commands:
  - cd /go/src/github.com/gravitational/teleport
  - find build -maxdepth 1 -iname "teleport*.rpm*" -print -exec cp {} /go/artifacts
    \;
  - find e/build -maxdepth 1 -iname "teleport*.rpm*" -print -exec cp {} /go/artifacts
    \;
- name: Upload to S3
  image: plugins/s3
  settings:
    access_key:
      from_secret: AWS_ACCESS_KEY_ID
    bucket:
      from_secret: AWS_S3_BUCKET
    region: us-west-2
    secret_key:
      from_secret: AWS_SECRET_ACCESS_KEY
    source: /go/artifacts/*
    strip_prefix: /go/artifacts/
    target: teleport/tag/${DRONE_TAG##v}
services:
- name: Start Docker
  image: docker:dind
  privileged: true
  volumes:
  - name: tmpfs
    path: /tmpfs
  - name: dockersock
    path: /var/run
volumes:
- name: tmpfs
  temp:
    medium: memory
- name: dockersock
  temp: {}

---
################################################
# Generated using dronegen, do not edit by hand!
# Use 'make dronegen' to update.
# Generated at dronegen/tag.go:375
################################################

kind: pipeline
type: kubernetes
name: build-linux-amd64-fips-rpm
trigger:
  event:
    include:
    - tag
  ref:
    include:
    - refs/tags/v*
  repo:
    include:
    - gravitational/*
workspace:
  path: /go
clone:
  disable: true
depends_on:
- build-linux-amd64-fips
steps:
- name: Check out code
  image: docker:git
  commands:
  - mkdir -p /go/src/github.com/gravitational/teleport
  - cd /go/src/github.com/gravitational/teleport
  - git clone https://github.com/gravitational/${DRONE_REPO_NAME}.git .
  - git checkout ${DRONE_TAG:-$DRONE_COMMIT}
  - mkdir -m 0700 /root/.ssh && echo -n "$GITHUB_PRIVATE_KEY" > /root/.ssh/id_rsa
    && chmod 600 /root/.ssh/id_rsa
  - ssh-keyscan -H github.com > /root/.ssh/known_hosts 2>/dev/null && chmod 600 /root/.ssh/known_hosts
  - git submodule update --init e
  - git submodule update --init --recursive webassets || true
  - rm -f /root/.ssh/id_rsa
  - mkdir -p /go/cache /go/artifacts
  - if [[ "${DRONE_TAG}" != "" ]]; then echo "${DRONE_TAG##v}" > /go/.version.txt;
    else egrep ^VERSION Makefile | cut -d= -f2 > /go/.version.txt; fi; cat /go/.version.txt
  environment:
    GITHUB_PRIVATE_KEY:
      from_secret: GITHUB_PRIVATE_KEY
- name: Wait for docker
  image: docker
  commands:
  - timeout 30s /bin/sh -c 'while [ ! -S /var/run/docker.sock ]; do sleep 1; done'
  volumes:
  - name: dockersock
    path: /var/run
- name: Download artifacts from S3
  image: amazon/aws-cli
  commands:
  - export VERSION=$(cat /go/.version.txt)
  - if [[ "${DRONE_TAG}" != "" ]]; then export S3_PATH="tag/$${DRONE_TAG##v}/"; else
    export S3_PATH="tag/"; fi
  - aws s3 cp s3://$AWS_S3_BUCKET/teleport/$${S3_PATH}teleport-ent-v$${VERSION}-linux-amd64-fips-bin.tar.gz
    /go/artifacts/
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_REGION: us-west-2
    AWS_S3_BUCKET:
      from_secret: AWS_S3_BUCKET
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
- name: Build artifacts
  image: docker
  commands:
  - apk add --no-cache bash curl gzip make tar
  - cd /go/src/github.com/gravitational/teleport
  - export VERSION=$(cat /go/.version.txt)
  - mkdir -m0700 $GNUPG_DIR
  - echo "$GPG_RPM_SIGNING_ARCHIVE" | base64 -d | tar -xzf - -C $GNUPG_DIR
  - chown -R root:root $GNUPG_DIR
  - make -C e rpm
  - rm -rf $GNUPG_DIR
  environment:
    ARCH: amd64
    ENT_TARBALL_PATH: /go/artifacts
    FIPS: "yes"
    GNUPG_DIR: /tmpfs/gnupg
    GPG_RPM_SIGNING_ARCHIVE:
      from_secret: GPG_RPM_SIGNING_ARCHIVE
    RUNTIME: fips
    TMPDIR: /go
  volumes:
  - name: tmpfs
    path: /tmpfs
  - name: dockersock
    path: /var/run
- name: Copy artifacts
  image: docker
  commands:
  - cd /go/src/github.com/gravitational/teleport
  - find e/build -maxdepth 1 -iname "teleport*.rpm*" -print -exec cp {} /go/artifacts
    \;
- name: Upload to S3
  image: plugins/s3
  settings:
    access_key:
      from_secret: AWS_ACCESS_KEY_ID
    bucket:
      from_secret: AWS_S3_BUCKET
    region: us-west-2
    secret_key:
      from_secret: AWS_SECRET_ACCESS_KEY
    source: /go/artifacts/*
    strip_prefix: /go/artifacts/
    target: teleport/tag/${DRONE_TAG##v}
services:
- name: Start Docker
  image: docker:dind
  privileged: true
  volumes:
  - name: tmpfs
    path: /tmpfs
  - name: dockersock
    path: /var/run
volumes:
- name: tmpfs
  temp:
    medium: memory
- name: dockersock
  temp: {}

---
################################################
# Generated using dronegen, do not edit by hand!
# Use 'make dronegen' to update.
# Generated at dronegen/buildbox.go:72
################################################

kind: pipeline
type: kubernetes
name: build-buildboxes
environment:
  GID: "1000"
  RUNTIME: go1.17.3
  UID: "1000"
trigger:
  event:
    include:
    - push
  repo:
    include:
    - gravitational/teleport
  branch:
    include:
    - master
workspace:
  path: /go/src/github.com/gravitational/teleport
clone:
  disable: true
steps:
- name: Check out code
  image: docker:git
  commands:
  - git clone --depth 1 --single-branch --branch ${DRONE_SOURCE_BRANCH:-master} https://github.com/gravitational/${DRONE_REPO_NAME}.git
    .
  - git checkout ${DRONE_COMMIT}
- name: Wait for docker
  image: docker
  commands:
  - timeout 30s /bin/sh -c 'while [ ! -S /var/run/docker.sock ]; do sleep 1; done'
  volumes:
  - name: dockersock
    path: /var/run
- name: buildbox
  image: docker
  commands:
  - apk add --no-cache make
  - chown -R $UID:$GID /go
  - docker login -u="$$QUAYIO_DOCKER_USERNAME" -p="$$QUAYIO_DOCKER_PASSWORD" quay.io
  - make -C build.assets buildbox
  - docker push quay.io/gravitational/teleport-buildbox:$RUNTIME
  environment:
    QUAYIO_DOCKER_PASSWORD:
      from_secret: QUAYIO_DOCKER_PASSWORD
    QUAYIO_DOCKER_USERNAME:
      from_secret: QUAYIO_DOCKER_USERNAME
  volumes:
  - name: dockersock
    path: /var/run
- name: buildbox-fips
  image: docker
  commands:
  - apk add --no-cache make
  - chown -R $UID:$GID /go
  - docker login -u="$$QUAYIO_DOCKER_USERNAME" -p="$$QUAYIO_DOCKER_PASSWORD" quay.io
  - make -C build.assets buildbox-fips
  - docker push quay.io/gravitational/teleport-buildbox-fips:$RUNTIME
  environment:
    QUAYIO_DOCKER_PASSWORD:
      from_secret: QUAYIO_DOCKER_PASSWORD
    QUAYIO_DOCKER_USERNAME:
      from_secret: QUAYIO_DOCKER_USERNAME
  volumes:
  - name: dockersock
    path: /var/run
- name: buildbox-centos6
  image: docker
  commands:
  - apk add --no-cache make
  - chown -R $UID:$GID /go
  - docker login -u="$$QUAYIO_DOCKER_USERNAME" -p="$$QUAYIO_DOCKER_PASSWORD" quay.io
  - make -C build.assets buildbox-centos6
  - docker push quay.io/gravitational/teleport-buildbox-centos6:$RUNTIME
  environment:
    QUAYIO_DOCKER_PASSWORD:
      from_secret: QUAYIO_DOCKER_PASSWORD
    QUAYIO_DOCKER_USERNAME:
      from_secret: QUAYIO_DOCKER_USERNAME
  volumes:
  - name: dockersock
    path: /var/run
- name: buildbox-arm
  image: docker
  commands:
  - apk add --no-cache make
  - chown -R $UID:$GID /go
  - docker login -u="$$QUAYIO_DOCKER_USERNAME" -p="$$QUAYIO_DOCKER_PASSWORD" quay.io
  - make -C build.assets buildbox-arm
  - docker push quay.io/gravitational/teleport-buildbox-arm:$RUNTIME
  environment:
    QUAYIO_DOCKER_PASSWORD:
      from_secret: QUAYIO_DOCKER_PASSWORD
    QUAYIO_DOCKER_USERNAME:
      from_secret: QUAYIO_DOCKER_USERNAME
  volumes:
  - name: dockersock
    path: /var/run
services:
- name: Start Docker
  image: docker:dind
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run
volumes:
- name: dockersock
  temp: {}

---
kind: signature
hmac: 4cc257b66cb1657eaf2734b660a5ff39d3a7957921bd917b3cb14a870727f869

...
